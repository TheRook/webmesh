// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: node_local.sql

package db

import (
	"context"
)

const getCurrentWireguardKey = `-- name: GetCurrentWireguardKey :one
SELECT value FROM node_local WHERE key = 'WireguardKey' LIMIT 1
`

func (q *Queries) GetCurrentWireguardKey(ctx context.Context) (string, error) {
	row := q.db.QueryRowContext(ctx, getCurrentWireguardKey)
	var value string
	err := row.Scan(&value)
	return value, err
}

const setCurrentWireguardKey = `-- name: SetCurrentWireguardKey :exec
INSERT into node_local (key, value) VALUES ('WireguardKey', ?)
ON CONFLICT (key) DO UPDATE SET value = excluded.value
`

func (q *Queries) SetCurrentWireguardKey(ctx context.Context, value string) error {
	_, err := q.db.ExecContext(ctx, setCurrentWireguardKey, value)
	return err
}
